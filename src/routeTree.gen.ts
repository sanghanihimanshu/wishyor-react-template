/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const AuthLazyImport = createFileRoute('/auth')()
const IndexLazyImport = createFileRoute('/')()
const AuthOtpLazyImport = createFileRoute('/auth/otp')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()

// Create/Update Routes

const AuthLazyRoute = AuthLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthOtpLazyRoute = AuthOtpLazyImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./routes/auth/otp.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/auth/otp': {
      id: '/auth/otp'
      path: '/otp'
      fullPath: '/auth/otp'
      preLoaderRoute: typeof AuthOtpLazyImport
      parentRoute: typeof AuthLazyImport
    }
  }
}

// Create and export the route tree

interface AuthLazyRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthOtpLazyRoute: typeof AuthOtpLazyRoute
}

const AuthLazyRouteChildren: AuthLazyRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthOtpLazyRoute: AuthOtpLazyRoute,
}

const AuthLazyRouteWithChildren = AuthLazyRoute._addFileChildren(
  AuthLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthLazyRouteWithChildren
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/otp': typeof AuthOtpLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthLazyRouteWithChildren
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/otp': typeof AuthOtpLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthLazyRouteWithChildren
  '/auth/login': typeof AuthLoginLazyRoute
  '/auth/otp': typeof AuthOtpLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/auth/login' | '/auth/otp'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/auth/login' | '/auth/otp'
  id: '__root__' | '/' | '/auth' | '/auth/login' | '/auth/otp'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthLazyRoute: typeof AuthLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthLazyRoute: AuthLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth": {
      "filePath": "auth.lazy.tsx",
      "children": [
        "/auth/login",
        "/auth/otp"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.tsx",
      "parent": "/auth"
    },
    "/auth/otp": {
      "filePath": "auth/otp.lazy.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
